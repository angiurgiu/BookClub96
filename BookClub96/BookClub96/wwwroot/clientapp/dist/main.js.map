{"version":3,"sources":["webpack:///./app/admin/createMeeting.component.html","webpack:///./app/groups.component.html","webpack:///./app/groups/createGroup.component.html","webpack:///./app/groups/groups.component.html","webpack:///./app/login/login.component.html","webpack:///./app/meetings.component.html","webpack:///./app/meetings/meetingList.component.html","webpack:///./app/meetings/meetingManager.component.html","webpack:///./app/meetings/meetings.component.html","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/admin/createMeeting.component.css","webpack:///./app/admin/createMeeting.component.ts","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/groups/createGroup.component.ts","webpack:///./app/groups/groups.component.ts","webpack:///./app/login/login.component.ts","webpack:///./app/meetings/meetingList.component.css","webpack:///./app/meetings/meetingList.component.ts","webpack:///./app/meetings/meetingManager.component.ts","webpack:///./app/meetings/meetings.component.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shared/group.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<div class=\\\"card bg-light p-1 m-1\\\">\\r\\n\\r\\n    <h3>Create Meeting</h3>\\r\\n    <div><strong>Book</strong>: </div>\\r\\n    <div><strong>Meeting time</strong>: </div>\\r\\n    <div><strong>Address</strong>: </div>\\r\\n\\r\\n    <strong>Host: </strong>\\r\\n\\r\\n    <strong>Attendees:</strong>\\r\\n\\r\\n    <button id=\\\"createButton\\\" class=\\\"btn btn-success\\\" (click)=\\\"createMeeting()\\\">Create</button>\\r\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">Cancel</a>\\r\\n</div>\"","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"<div class=\\\"row align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <div class=\\\"col-md-4 offset-md-4\\\">\\r\\n            <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n            <form (submit)=\\\"onCreate()\\\" #theForm=\\\"ngForm\\\" novalidate>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"groupName\\\">Group name</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"groupName\\\" [(ngModel)]=\\\"group.groupName\\\" #groupName=\\\"ngModel\\\" required />\\r\\n                    <div class=\\\"text-danger\\\" *ngIf=\\\"groupName.touched && groupName.invalid && groupName.errors.required\\\">Group name is required!</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"members\\\">Members</label>\\r\\n                    <input type=\\\"text\\\" [disabled]=\\\"areMembersDisabled\\\" class=\\\"form-control\\\" name=\\\"members\\\" [(ngModel)]=\\\"group.members\\\" #members=\\\"ngModel\\\" required />\\r\\n                    <div class=\\\"text-danger\\\" disabled=\\\"true\\\" *ngIf=\\\"members.touched && members.invalid && members.errors.required\\\">Members are required!</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"type\\\">Group type</label> <br />\\r\\n                \\r\\n                    <select class=\\\"form-control\\\" name=\\\"type\\\" [(ngModel)]=\\\"group.type\\\" #type=\\\"ngModel\\\">\\r\\n                        <option value=\\\"Open\\\">Open\\r\\n                        <option value=\\\"ByApplication\\\">ByApplication\\r\\n                        <option value=\\\"Closed\\\">Closed\\r\\n                    </select> <br />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Create\\\" [disabled]=\\\"theForm.invalid\\\" />\\r\\n                    <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n<div *ngIf=\\\"loadedGroups && loadedUser\\\">\\r\\n    <ng-template [ngIf]=\\\"!isSignedIn\\\">\\r\\n        <h5><strong><a routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\">Sign in</a> to view your groups.</strong></h5>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template [ngIf]=\\\"isPartOfAnyGroup\\\">\\r\\n        <h4 style=\\\"display:inline;\\\"><strong>Your groups</strong></h4>\\r\\n        <button style=\\\"margin-left: 2.5em\\\" class=\\\"btn btn-outline-info\\\" (click)=\\\"createGroup()\\\">Create new</button>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template [ngIf]=\\\"!isPartOfAnyGroup && isSignedIn\\\">\\r\\n        <h6><strong>You're not a member of any groups. You can start your own, or join an existing one.</strong></h6>\\r\\n        <button class=\\\"btn btn-outline-info\\\" (click)=\\\"createGroup()\\\">Create</button>\\r\\n    </ng-template>\\r\\n    \\r\\n    <div class=\\\"row\\\" #hasGroup>\\r\\n        <div class=\\\"col-md-6\\\" *ngFor=\\\"let g of myGroups\\\">\\r\\n            <div class=\\\"card p-1 m-1\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <strong>Group Name</strong>: {{g.groupName}}\\r\\n                </div>\\r\\n                <ul>\\r\\n                    <li><strong>Type</strong>: {{GroupType[g.type]}}</li>\\r\\n                    <br />\\r\\n                    <strong>Members:</strong>\\r\\n                    <ul *ngFor=\\\"let member of g.members\\\">\\r\\n                        <li>{{member.member.userName}}</li>\\r\\n                    </ul>\\r\\n                </ul>\\r\\n                <div class=\\\"wrapper\\\">\\r\\n                    <div class=\\\"btn-group text-center\\\" role=\\\"group\\\" aria-label=\\\"Basic group\\\">\\r\\n                        <button class=\\\"btn btn-outline-warning\\\" (click)=\\\"manageGroup(g)\\\">Manage</button>\\r\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"leaveGroup(g)\\\">Leave</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<hr/>\\r\\n\\r\\n<div *ngIf=\\\"loadedGroups\\\">\\r\\n    <h4><strong>Other Groups:</strong></h4>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\" *ngFor=\\\"let g of otherGroups\\\">\\r\\n            <div class=\\\"card p-1 m-1\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <strong>Group Name</strong>: {{g.groupName}}\\r\\n                </div>\\r\\n                <ul>\\r\\n                    <li><strong>Type</strong>: {{GroupType[g.type]}}</li>\\r\\n                    <br />\\r\\n                    <strong>Members:</strong>\\r\\n                    <ul *ngFor=\\\"let member of g.members\\\">\\r\\n                        <li>{{member.member.userName}}</li>\\r\\n                    </ul>\\r\\n                </ul>\\r\\n                <div class=\\\"wrapper\\\">\\r\\n                    <button class=\\\"btn ctrbtn btn-success\\\" [disabled]=\\\"!canJoin(g)\\\" (click)=\\\"joinGroup(g)\\\">Join Group</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n<div>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 col-md-offset-4\\\">\\n        <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\n        <form (submit)=\\\"onLogin()\\\" #theForm=\\\"ngForm\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"creds.username\\\" #username=\\\"ngModel\\\" required/>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"username.touched && username.invalid && username.errors.required\\\">Username is required!</div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"creds.password\\\" #password=\\\"ngModel\\\"/>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"password.touched && password.invalid && password.errors.required\\\">Password is required!</div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"theForm.invalid\\\"/>\\n                <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    \\r\\n    <div class=\\\"book-info col-md-12\\\" *ngFor=\\\"let m of meetings\\\">\\r\\n        <div class=\\\"card p-1 m-1\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"book-info col-md-5\\\">\\r\\n                    <div class=\\\"card p-1 m-1\\\">\\r\\n                        <img src=\\\"/img/{{m.book.bookId}}.jpg\\\" class=\\\"img-fluid\\\" [alt]=\\\"m.book.title\\\" />\\r\\n                        <div class=\\\"book-name\\\">{{ m.book.title }}</div>\\r\\n                        <ul class=\\\"book-props\\\">\\r\\n                            <li><strong>Author</strong>: {{m.book.author}}</li>\\r\\n                            <li><strong>Title</strong>: {{m.book.title}}</li>\\r\\n                            <li><strong>Genre</strong>: {{m.book.genre}}</li>\\r\\n                        </ul>\\r\\n                        <button id=\\\"editButton\\\" class=\\\"btn btn-success\\\" (click)=\\\"editMeeting(m)\\\">Edit</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"book-info col-md-7\\\">\\r\\n                    <ul class=\\\"book-props\\\">\\r\\n                        <li><strong>Address</strong>: {{m.address}}</li>\\r\\n                        <li><strong>Time</strong>: {{m.time}}</li>\\r\\n                        <div *ngFor=\\\"let attendee of m.attendees\\\">\\r\\n                            <div *ngIf=\\\"attendee.isHost\\\"><strong>Host</strong>: {{ attendee.member.userName }}</div>\\r\\n                        </div>\\r\\n                        <strong>Attendees:</strong>\\r\\n                        <ul *ngFor=\\\"let attendee of m.attendees\\\">\\r\\n                            <li>{{attendee.member.userName}}</li>\\r\\n                        </ul>\\r\\n                    </ul>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<div class=\\\"card p-1 m-1\\\">\\r\\n    <div *ngIf=\\\"data.editedMeeting; then thenBlock else elseBlock\\\"></div>\\r\\n    <ng-template #thenBlock>\\r\\n        <h3>Edit Meeting</h3>\\r\\n        <div><strong>Book</strong>: {{ data.editedMeeting.book.title }}</div>\\r\\n        <div><strong>Meeting time</strong>: {{ data.editedMeeting.time }}</div>\\r\\n        <div><strong>Address</strong>: {{ data.editedMeeting.address }}</div>\\r\\n\\r\\n        <strong>Host: </strong>\\r\\n        <select *ngFor=\\\"let attendee of data.editedMeeting.attendees\\\">\\r\\n            <div *ngIf=\\\"attendee.isHost; then thenBlock else elseBlock\\\"></div>\\r\\n            <ng-template #thenBlock>\\r\\n                <option value=\\\"{{ attendee.member.userName }}\\\" selected=\\\"selected\\\">{{ attendee.member.userName }}</option>\\r\\n            </ng-template>\\r\\n            <ng-template #elseBlock>\\r\\n                <option value=\\\"{{ attendee.member.userName }}\\\">{{ attendee.member.userName }}</option>\\r\\n            </ng-template>\\r\\n        </select>\\r\\n\\r\\n        <strong>Attendees:</strong>\\r\\n        <ul *ngFor=\\\"let attendee of data.editedMeeting.attendees\\\">\\r\\n            <li>{{attendee.member.userName}}</li>\\r\\n        </ul>\\r\\n        <button id=\\\"editButton\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveMeeting()\\\">Save</button>\\r\\n    </ng-template>\\r\\n    <ng-template #elseBlock>\\r\\n        <img src=\\\"https://knowledgequest.aasl.org/wp-content/uploads/2015/01/books.png\\\"/>\\r\\n        <a routerLink=\\\"/admin/createmeeting\\\" class=\\\"btn btn-success\\\">Create new meeting</a>\\r\\n    </ng-template>\\r\\n</div>\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n        <meeting-list></meeting-list>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <meeting-manager></meeting-manager>\\r\\n    </div>\\r\\n</div>\\r\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \".book-info img {\\r\\n    max-width: 120px;\\r\\n    float: left;\\r\\n    margin: 0 2px;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n\\r\\n.book-info .book-name {\\r\\n    font-size: medium;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudEFwcC9hcHAvYWRtaW4vY3JlYXRlTWVldGluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxhQUFhO0lBQ2IsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL2FkbWluL2NyZWF0ZU1lZXRpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib29rLWluZm8gaW1nIHtcclxuICAgIG1heC13aWR0aDogMTIwcHg7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIG1hcmdpbjogMCAycHg7XHJcbiAgICBib3JkZXI6IHNvbGlkIDFweCBibGFjaztcclxufVxyXG5cclxuLmJvb2staW5mbyAuYm9vay1uYW1lIHtcclxuICAgIGZvbnQtc2l6ZTogbWVkaXVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuIl19 */\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\n\r\n@Component(\r\n{\r\n    selector: \"create-meeting\",\r\n    templateUrl: \"createMeeting.component.html\",\r\n        styleUrls: ['createMeeting.component.css']\r\n})\r\nexport class CreateMeeting\r\n{\r\n    constructor(private data: DataService) { }\r\n\r\n    createMeeting() {\r\n        alert(\"creatingMeeting\");\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: \"the-groups\",\r\n    templateUrl: \"./groups.component.html\"\r\n})\r\nexport class GroupsComponent {\r\n    title = \"Book Club 96 Groups\";\r\n}\r\n\r\n@Component({\r\n  selector: \"the-meetings\",\r\n  templateUrl: \"./meetings.component.html\"\r\n})\r\nexport class MeetingsComponent {\r\n  title = \"Book Club 96 Meetings\";\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\"\r\n\r\nimport { MeetingsComponent } from './app.component';\r\nimport { GroupsComponent } from './app.component';\r\nimport { MeetingList } from './meetings/meetingList.component'\r\nimport { Meetings } from './meetings/meetings.component'\r\nimport { CreateGroup } from './groups/createGroup.component'\r\nimport { Groups } from './groups/groups.component'\r\nimport { Login } from './login/login.component'\r\nimport { MeetingManager } from './meetings/meetingManager.component'\r\nimport { CreateMeeting } from './admin/createMeeting.component'\r\nimport { DataService } from './shared/dataService'\r\n\r\nimport { RouterModule } from '@angular/router'\r\nimport { FormsModule } from '@angular/forms'\r\n\r\nlet meetingRoutes = [\r\n    {\r\n        path: \"\",\r\n        component: Meetings\r\n    },\r\n    {\r\n        path: \"admin/createmeeting\",\r\n        component: CreateMeeting\r\n    }];\r\n\r\n@NgModule({\r\n  declarations: [\r\n      MeetingsComponent,\r\n      MeetingList,\r\n      MeetingManager,\r\n      Meetings,\r\n      CreateMeeting,\r\n      Login\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      FormsModule,\r\n      HttpClientModule,\r\n      RouterModule.forRoot(meetingRoutes,\r\n          {\r\n              useHash: true,\r\n              enableTracing: false // for debugging\r\n          })\r\n  ],\r\n    providers: [\r\n    DataService\r\n  ],\r\n    bootstrap: [MeetingsComponent]\r\n})\r\nexport class MeetingsModule { }\r\n\r\nlet groupRoutes = [\r\n    {\r\n        path: \"\",\r\n        component: Groups\r\n    },\r\n    {\r\n        path: \"login\",\r\n        component: Login\r\n    },\r\n    {\r\n        path: \"createGroup\",\r\n        component: CreateGroup\r\n    }];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CreateGroup,\r\n        GroupsComponent,\r\n        Groups,\r\n        Login,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        RouterModule.forRoot(groupRoutes,\r\n            {\r\n                useHash: true,\r\n                enableTracing: false // for debugging\r\n            })\r\n    ],\r\n    providers: [\r\n        DataService\r\n    ],\r\n    bootstrap: [GroupsComponent]\r\n})\r\nexport class GroupsModule { }","﻿import { Component } from \"@angular/core\"\r\nimport { DataService } from \"../shared/dataService\"\r\nimport { Group } from \"../shared/group\"\r\nimport { GroupType } from \"../shared/group\"\r\nimport { GroupMember } from \"../shared/group\"\r\nimport { Meeting } from \"../shared/meeting\"\r\n\r\nimport { Router } from \"@angular/router\"\r\n\r\n@Component({\r\n    selector: \"createGroup\",\r\n    templateUrl: \"createGroup.component.html\"\r\n})\r\nexport class CreateGroup {\r\n    constructor(private data: DataService, private router: Router) {\r\n    }\r\n\r\n    private errorMessage: string = \"\";\r\n\r\n    public areMembersDisabled = true;\r\n\r\n    public group = {\r\n        creationTime: new Date(),\r\n        groupName: \"\",\r\n        members: this.data.username,\r\n        type: \"Open\"\r\n    };\r\n\r\n    GroupType = GroupType;\r\n\r\n    public groupTypes = [\r\n        { type: \"Open\", description: \"Anyone can join\" },\r\n        { type: \"ByApplication\", description: \"Admins will receive an aplication via email\" },\r\n        { type: \"Closed\", description: \"Only admins can add members\" }\r\n    ];\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    onCreate(): void {\r\n        if (this.data.loginRequired) {\r\n            this.router.navigate([\"login\"]);\r\n        } else {\r\n            var newGroup = new Group();\r\n            newGroup.groupId = 0;\r\n            newGroup.creationTime = new Date();\r\n            newGroup.meetings = new Array<Meeting>();\r\n            newGroup.members = new Array<GroupMember>();\r\n            newGroup.type = GroupType[this.group.type];\r\n            newGroup.groupName = this.group.groupName;\r\n\r\n            this.data.createGroup(newGroup)\r\n                .subscribe(success => {\r\n                        if (success) {\r\n                            this.data.loadGroups();\r\n                            this.router.navigate(['/'])\r\n                                .then(() => {\r\n                                    window.location.reload();\r\n                                });\r\n                        }\r\n                    },\r\n                    err => this.errorMessage = \"Failed to create group.\");\r\n        }\r\n    }\r\n\r\n    getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n}","﻿import { Component } from \"@angular/core\"\r\nimport { DataService } from \"../shared/dataService\"\r\nimport { Group } from \"../shared/group\"\r\nimport { GroupType } from \"../shared/group\"\r\nimport { GroupMember } from \"../shared/group\"\r\nimport { Member } from \"../shared/member\"\r\nimport { Router } from \"@angular/router\"\r\n\r\n@Component({\r\n    selector: \"groups\",\r\n    templateUrl: \"groups.component.html\"\r\n})\r\nexport class Groups {\r\n    constructor(private data: DataService, private router: Router) {\r\n    }\r\n\r\n    public myGroups: Group[] = [];\r\n    public otherGroups: Group[] = [];\r\n\r\n    private errorMessage: string = \"\";\r\n    public isSignedIn: boolean = false;\r\n    public isPartOfAnyGroup: boolean = false;\r\n    public loadedUser: boolean = false;\r\n    public loadedGroups: boolean = false;\r\n\r\n    GroupType = GroupType;\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadCurrentUser().subscribe(success => {\r\n            if (success) {\r\n                this.loadedUser = true;\r\n\r\n                if (this.data.currentUser) {\r\n                    this.isSignedIn = true;\r\n                }\r\n\r\n                this.data.loadGroups()\r\n                    .subscribe(success => {\r\n                        if (success) {\r\n                            this.data.groups.forEach((value, key) => {\r\n                                if (this.isMember(value)) {\r\n                                    this.myGroups.push(value);\r\n                                } else {\r\n                                    this.otherGroups.push(value);\r\n                                }\r\n                            });\r\n                            \r\n                            if (this.isSignedIn && this.myGroups.length !== 0) {\r\n                                this.isPartOfAnyGroup = true;\r\n                            }\r\n\r\n                            this.loadedGroups = true;\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    joinGroup(group: Group) {\r\n        if (this.data.loginRequired) {\r\n            this.router.navigate([\"login\"]);\r\n        } else if (this.canJoin(group)) {\r\n            if (group.type === GroupType.ByApplication) {\r\n                alert(\"Sending application request.\");\r\n            } else if (group.type === GroupType.Open) {\r\n\r\n                var groupMember = new GroupMember();\r\n                groupMember.memberId = this.data.currentUser.id;\r\n                groupMember.member = this.data.currentUser;\r\n                groupMember.group = group;\r\n                groupMember.groupId = group.groupId;\r\n                groupMember.isAdmin = false;\r\n\r\n                this.data.joinGroup(groupMember)\r\n                    .subscribe(success => {\r\n                            if (success) {\r\n                                this.data.loadGroups();\r\n                                this.router.navigate(['/'])\r\n                                    .then(() => {\r\n                                        window.location.reload();\r\n                                    });\r\n                            }\r\n                        },\r\n                        err => this.errorMessage = \"Failed to join group.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    canJoin(group: Group) {\r\n        if (this.isMember(group)) {\r\n            return false;\r\n        } else if (group.type === GroupType.Closed) {\r\n            return false;\r\n        } else if (group.type === GroupType.ByApplication) {\r\n            return false;\r\n        } else if (group.type === GroupType.Open) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    leaveGroup(group: Group) {\r\n        if (this.data.loginRequired) {\r\n            this.router.navigate([\"login\"]);\r\n        } else if (this.isMember(group)) {\r\n\r\n            var groupMember = new GroupMember();\r\n            groupMember.memberId = this.data.currentUser.id;\r\n            groupMember.member = this.data.currentUser;\r\n            groupMember.group = group;\r\n            groupMember.groupId = group.groupId;\r\n\r\n            this.data.leaveGroup(groupMember)\r\n                .subscribe(success => {\r\n                        if (success) {\r\n                            this.data.loadGroups();\r\n                            this.router.navigate(['/'])\r\n                                .then(() => {\r\n                                    window.location.reload();\r\n                                });\r\n                        }\r\n                    },\r\n                    err => this.errorMessage = \"Failed to leave group.\");\r\n        }\r\n    }\r\n\r\n    isMember(group: Group) {\r\n        if (!this.loadedUser) {\r\n            return false;\r\n        }\r\n\r\n        var isMember = false;\r\n        group.members.forEach((value, key) => {\r\n            if (value.memberId === this.data.currentUser.id) {\r\n                isMember = true;\r\n            }\r\n        });\r\n\r\n        return isMember;\r\n    }\r\n\r\n    createGroup() {\r\n        if (this.data.loginRequired) {\r\n            this.router.navigate([\"login\"]);\r\n        } else {\r\n            this.router.navigate([\"createGroup\"]);\r\n        }\r\n    }\r\n}\r\n","﻿import { Component } from \"@angular/core\";\r\nimport { Router } from '@angular/router'\r\n\r\nimport { DataService } from \"../shared/dataService\"\r\n\r\n@Component({\r\n    selector: \"login\",\r\n    templateUrl: \"login.component.html\"\r\n})\r\nexport class Login {\r\n    constructor(private data: DataService, private router: Router) { }\r\n\r\n    public creds = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    onLogin() {\r\n        this.data.login(this.creds)\r\n            .subscribe(success => {\r\n                    this.router.navigate([\"/\"]);\r\n                },\r\n                err => this.errorMessage = \"Failed to login.\");\r\n    }\r\n\r\n    errorMessage: string = \"\";\r\n}\r\n","module.exports = \".book-info img {\\r\\n    max-width: 120px;\\r\\n    float: left;\\r\\n    margin: 0 2px;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n\\r\\n.book-info .book-name {\\r\\n    font-size: medium;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudEFwcC9hcHAvbWVldGluZ3MvbWVldGluZ0xpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsYUFBYTtJQUNiLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixpQkFBaUI7QUFDckIiLCJmaWxlIjoiQ2xpZW50QXBwL2FwcC9tZWV0aW5ncy9tZWV0aW5nTGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvb2staW5mbyBpbWcge1xyXG4gICAgbWF4LXdpZHRoOiAxMjBweDtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgbWFyZ2luOiAwIDJweDtcclxuICAgIGJvcmRlcjogc29saWQgMXB4IGJsYWNrO1xyXG59XHJcblxyXG4uYm9vay1pbmZvIC5ib29rLW5hbWUge1xyXG4gICAgZm9udC1zaXplOiBtZWRpdW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4iXX0= */\"","﻿import { Component, OnInit } from \"@angular/core\"\r\nimport { DataService } from \"../shared/dataService\"\r\nimport { Meeting } from \"../shared/meeting\"\r\n\r\n@Component({\r\n    selector: \"meeting-list\",\r\n    templateUrl: \"meetingList.component.html\",\r\n    styleUrls: [\"meetingList.component.css\"]\r\n})\r\nexport class MeetingList implements OnInit {\r\n\r\n    constructor(private data: DataService) {\r\n    }\r\n\r\n    public meetings: Meeting[] = [];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.meetings = this.data.meetings;\r\n                }\r\n            });\r\n    }\r\n\r\n    editMeeting(meeting: Meeting) {\r\n        this.data.editMeeting(meeting);\r\n    }\r\n}","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\n\r\n@Component(\r\n{\r\n    selector: \"meeting-manager\",\r\n    templateUrl: \"meetingManager.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class MeetingManager\r\n{\r\n    constructor(private data: DataService) { }\r\n\r\n    createMeeting() {\r\n        this.data.createMeeting();\r\n    }\r\n\r\n    saveMeeting() {\r\n        this.data.saveMeeting();\r\n    }\r\n}\r\n","﻿import { Component } from \"@angular/core\"\r\n\r\n@Component({\r\n    selector: \"meetings\",\r\n    templateUrl: \"meetings.component.html\"\r\n})\r\n\r\nexport class Meetings {\r\n}\r\n","﻿import { HttpClient } from \"@angular/common/http\"\r\nimport { HttpHeaders } from \"@angular/common/http\"\r\nimport { Injectable } from \"@angular/core\"\r\nimport { Observable, OperatorFunction } from \"rxjs\"\r\nimport { map } from \"rxjs/operators\"\r\n\r\nimport { Book } from \"./book\"\r\nimport { Group } from \"./group\"\r\nimport { GroupMember } from \"./group\"\r\nimport { Meeting } from \"./meeting\"\r\nimport { Member } from \"./member\"\r\n\r\n@Injectable()\r\nexport class DataService\r\n{\r\n    constructor(private http: HttpClient)\r\n    {\r\n    }\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date;\r\n\r\n    public editedMeeting: Meeting;\r\n\r\n    public meetings: Meeting[] = [];\r\n\r\n    public groups: Group[] = [];\r\n\r\n    public books: Book[] = [];\r\n\r\n    public currentUser: Member;\r\n    public username: string;\r\n\r\n    loadBooks(): Observable<boolean> {\r\n        return this.http.get(\"/api/books\")\r\n            .pipe((map((data: any[]) => {\r\n                this.books = data;\r\n                return true;\r\n            })) as OperatorFunction<any, boolean>);\r\n    }\r\n\r\n    loadProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/groups/0/meetings/getAll\")\r\n            .pipe((map((data: any[]) =>\r\n            {\r\n                this.meetings = data;\r\n                return true;\r\n            })) as OperatorFunction<any,boolean>);\r\n    }\r\n\r\n    loadGroups(): Observable<boolean> {\r\n        return this.http.get(\"/api/groups?includeMeetings=true&getAll=true\")\r\n            .pipe((map((data: any[]) => {\r\n                this.groups = data;\r\n                return true;\r\n            })) as OperatorFunction<any, boolean>);\r\n    }\r\n\r\n    loadCurrentUser(): Observable<boolean> {\r\n            return this.http.get(\"/api/membership/currentUser\")\r\n                .pipe((map((data: any) => {\r\n                    this.currentUser = data;\r\n                    return true;\r\n                })) as OperatorFunction<any, boolean>);\r\n        }\r\n\r\n    public get loginRequired() {\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n    }\r\n\r\n    login(creds): Observable<boolean> {\r\n        return this.http.post(\"/account/createtoken\", creds)\r\n            .pipe((map((data: any) => {\r\n                    this.token = data.token;\r\n                    this.tokenExpiration = data.expiration;\r\n                    this.username = creds.username;\r\n\r\n                    return true;\r\n                })) as OperatorFunction<any, boolean>);\r\n    }\r\n\r\n    public editMeeting(meeting: Meeting) {\r\n        this.editedMeeting = meeting;\r\n    }\r\n\r\n    public createMeeting() {\r\n    }\r\n\r\n    public saveMeeting() {\r\n    }\r\n\r\n    joinGroup(groupMember: GroupMember) {\r\n        return this.http.post(\"/api/groupmembers\", groupMember,\r\n                {\r\n                    headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\r\n                })\r\n            .pipe((map((data: any) => {\r\n                return true;\r\n            })) as OperatorFunction<any, boolean>);\r\n    }\r\n\r\n    leaveGroup(groupMember: GroupMember) {\r\n        return this.http.post(\"/api/groupmembers/remove\", groupMember,\r\n                {\r\n                    headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\r\n                })\r\n            .pipe((map((data: any) => {\r\n                return true;\r\n            })) as OperatorFunction<any, boolean>);\r\n    }\r\n\r\n    createGroup(group: Group) {\r\n        return this.http.post(\"/api/groups\", group)\r\n            .pipe((map((data: any) => {\r\n                return true;\r\n            })) as OperatorFunction<any, boolean>);\r\n    }\r\n}\r\n","﻿import { Member } from \"../shared/member\"\r\nimport { Meeting } from \"../shared/meeting\"\r\n\r\nexport class Group {\r\n    groupId: number;\r\n    creationTime: Date;\r\n    meetings: Array<Meeting> = new Array<Meeting>();\r\n    members: Array<GroupMember> = new Array<GroupMember>();\r\n    type: GroupType;\r\n    groupName: string;\r\n}\r\n\r\nexport enum GroupType {\r\n    Open,\r\n    Closed,\r\n    ByApplication\r\n}\r\n\r\nexport class GroupMember {\r\n    isAdmin: boolean;\r\n    memberId: string;\r\n    member: Member;\r\n    group: Group;\r\n    groupId: number;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { GroupsModule } from './app/app.module';\r\nimport { MeetingsModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(MeetingsModule)\r\n  .catch(err => console.error(err));\r\n\r\nplatformBrowserDynamic().bootstrapModule(GroupsModule)\r\n    .catch(err => console.error(err));"],"sourceRoot":""}